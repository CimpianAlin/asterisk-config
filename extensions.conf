; WARNING do not change this file, but instead use extension-custom.conf
; as this will limit the amount of conflicts when upgrading

[general]
autofallthrough=no	;don't let asterisk guss
static=yes		;don't allow asterisk to change the config file

[globals]
NoFailoverCause=1,16,17,18,19,21,22,28

[HangupCause]
exten => _h-!,1,Progress()
exten => _h-!,2,Playback(AST_CAUSE_UNSPECIFIED,noanswer)
exten => _h-!,n,Hangup(${HANGUPCAUSE})

exten => h-0,2,Playback(AST_CAUSE_UNSPECIFIED,noanswer)
exten => h-1,2,Playback(AST_CAUSE_UNALLOCATED,noanswer)
exten => h-2,2,Playback(AST_CAUSE_NO_ROUTE_TRANSIT_NET,noanswer)
exten => h-3,2,Playback(AST_CAUSE_NO_ROUTE_DESTINATION,noanswer)
exten => h-5,2,Playback(AST_CAUSE_MISDIALLED_TRUNK_PREFIX,noanswer)
exten => h-6,2,Playback(AST_CAUSE_CHANNEL_UNACCEPTABLE,noanswer)
exten => h-7,2,Playback(AST_CAUSE_CALL_AWARDED_DELIVERED,noanswer)
exten => h-14,2,Playback(AST_CAUSE_NUMBER_PORTED_NOT_HERE,noanswer)
exten => h-16,2,NoOP(AST_CAUSE_NORMAL_CLEARING,noanswer)
exten => h-17,2,NoOP(AST_CAUSE_USER_BUSY,noanswer)
exten => h-18,2,NoOP(AST_CAUSE_NO_USER_RESPONSE,noanswer)
exten => h-19,2,NoOP(AST_CAUSE_NO_ANSWER,noanswer)
exten => h-20,2,Playback(AST_CAUSE_SUBSCRIBER_ABSENT,noanswer)
exten => h-21,2,NoOP(AST_CAUSE_CALL_REJECTED,noanswer)
exten => h-22,2,Playback(AST_CAUSE_NUMBER_CHANGED,noanswer)
exten => h-23,2,Playback(AST_CAUSE_REDIRECTED_TO_NEW_DESTINATION,noanswer)
exten => h-25,2,Playback(AST_CAUSE_EXCHANGE_ROUTING_ERROR,noanswer)
exten => h-26,2,NoOP(AST_CAUSE_ANSWERED_ELSEWHERE,noanswer)
exten => h-27,2,Playback(AST_CAUSE_DESTINATION_OUT_OF_ORDER,noanswer)
exten => h-28,2,Playback(AST_CAUSE_INVALID_NUMBER_FORMAT,noanswer)
exten => h-29,2,Playback(AST_CAUSE_FACILITY_REJECTED,noanswer)
exten => h-30,2,Playback(AST_CAUSE_RESPONSE_TO_STATUS_ENQUIRY,noanswer)
exten => h-31,2,Playback(AST_CAUSE_NORMAL_UNSPECIFIED,noanswer)
exten => h-34,2,Playback(AST_CAUSE_NORMAL_CIRCUIT_CONGESTION,noanswer)
exten => h-38,2,Playback(AST_CAUSE_NETWORK_OUT_OF_ORDER,noanswer)
exten => h-41,2,Playback(AST_CAUSE_NORMAL_TEMPORARY_FAILURE,noanswer)
exten => h-42,2,Playback(AST_CAUSE_SWITCH_CONGESTION,noanswer)
exten => h-43,2,Playback(AST_CAUSE_ACCESS_INFO_DISCARDED,noanswer)
exten => h-44,2,Playback(AST_CAUSE_REQUESTED_CHAN_UNAVAIL,noanswer)
exten => h-45,2,Playback(AST_CAUSE_PRE_EMPTED,noanswer)
exten => h-50,2,Playback(AST_CAUSE_FACILITY_NOT_SUBSCRIBED,noanswer)
exten => h-52,2,Playback(AST_CAUSE_OUTGOING_CALL_BARRED,noanswer)
exten => h-54,2,Playback(AST_CAUSE_INCOMING_CALL_BARRED,noanswer)
exten => h-57,2,Playback(AST_CAUSE_BEARERCAPABILITY_NOTAUTH,noanswer)
exten => h-58,2,Playback(AST_CAUSE_BEARERCAPABILITY_NOTAVAIL,noanswer)
exten => h-63,2,Playback(AST_CAUSE_SERVICE_UNAVAILABLE,noanswer)
exten => h-65,2,Playback(AST_CAUSE_BEARERCAPABILITY_NOTIMPL,noanswer)
exten => h-66,2,Playback(AST_CAUSE_CHAN_NOT_IMPLEMENTED,noanswer)
exten => h-69,2,Playback(AST_CAUSE_FACILITY_NOT_IMPLEMENTED,noanswer)
exten => h-79,2,Playback(AST_CAUSE_SERVICE_NOT_IMPLEMENTED,noanswer)
exten => h-81,2,Playback(AST_CAUSE_INVALID_CALL_REFERENCE,noanswer)
exten => h-88,2,Playback(AST_CAUSE_INCOMPATIBLE_DESTINATION,noanswer)
exten => h-95,2,Playback(AST_CAUSE_INVALID_MSG_UNSPECIFIED,noanswer)
exten => h-96,2,Playback(AST_CAUSE_MANDATORY_IE_MISSING,noanswer)
exten => h-97,2,Playback(AST_CAUSE_MESSAGE_TYPE_NONEXIST,noanswer)
exten => h-98,2,Playback(AST_CAUSE_WRONG_MESSAGE,noanswer)
exten => h-99,2,Playback(AST_CAUSE_IE_NONEXIST,noanswer)
exten => h-100,2,Playback(AST_CAUSE_INVALID_IE_CONTENTS,noanswer)
exten => h-101,2,Playback(AST_CAUSE_WRONG_CALL_STATE,noanswer)
exten => h-102,2,Playback(AST_CAUSE_RECOVERY_ON_TIMER_EXPIRE,noanswer)
exten => h-103,2,Playback(AST_CAUSE_MANDATORY_IE_LENGTH_ERROR,noanswer)
exten => h-111,2,Playback(AST_CAUSE_PROTOCOL_ERROR,noanswer)
exten => h-127,2,Playback(AST_CAUSE_INTERWORKING,noanswer)
; The messages here need to be installed in /var/lib/asterisk/sounds/

exten => h,1,Log(NOTICE,A-Number=${A-Number} A-Name=${A-Name} A-IMSI=${A-IMSI} B-Number=${B-Number} B-Name=${B-Name} B-IMSI=${B-IMSI} hangupcause=${HANGUPCAUSE} dialstatus=${DIALSTATUS} hangupdirection=${CDR(hangupdirection)} duration=${CDR(duration)} billsec=${CDR(billsec)})

[default](HangupCause)
; This is the context for handsets that are allowed to attached via open registration.
; Normally, this context is only used for testing.

; These are test extensions that you might want to disable after installation.

; Record voice file to /tmp directory
exten => 1111,1,Set(CDR(hangupdirection)=A)
same => n,Answer(2000) ; Call 1111 to Record new Sound Files
same => n,Playback(beep)	; play a beep sount to indicat that recording has startet
same => n,Record(/tmp/asterisk-recording:gsm) ; Press # to stop recording
same => n,Wait(2)
same => n,Playback(/tmp/asterisk-recording) ; Listen to your voice
same => n,wait(2)
same => n,Set(CDR(hangupdirection)=SYSTEM)
same => n,Hangup(16)

; Create an extension, 2600, for evaluating echo latency.
exten => 2600,1,Set(CDR(hangupdirection)=A)
same => n,Answer() 
same => n,Echo()
same => n,Set(CDR(hangupdirection)=SYSTEM)
same => n,Hangup(16)

; 2601 is for testing prompts
exten => 2601,1,Set(CDR(hangupdirection)=A)
same => n,Answer(2000)	;allow the channel to be establis
same => n,Playback(followme/sorry)
same => n,Set(CDR(hangupdirection)=SYSTEM)
same => n,Hangup(16)

; 2602 testtone
exten => 2602,1,Set(hangupdirection=A)
same => n,Answer()
same => n,Milliwatt()
same => n,Set(hangupdirection=SYSTEM)
same => n,Hangup(16)

; 2603 IP address
exten => 2603,1,Set(hangupdirection=A)
same => n,Answer(2000)
same => n,Set(IP=${SHELL(ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}')})
same => n,SayNumber(${CUT(IP,.,1)})
same => n,Playback(letters/dot)
same => n,SayNumber(${CUT(IP,.,2)})
same => n,Playback(letters/dot)
same => n,SayNumber(${CUT(IP,.,3)})
same => n,Playback(letters/dot)
same => n,SayNumber(${CUT(IP,.,4)})
same => n,Set(hangupdirection=SYSTEM)
same => n,Hangup(16)

; 2604 say IMSI
exten => 2604,1,Set(hangupdirection=A)
same => n,Answer(2000)
same => n,SayDigits(${A-IMSI})
same => n,Set(hangupdirection=SYSTEM)
same => n,Hangup(16)

[DialGSM](HangupCause)
; GoSub for OpenBTS users
exten => _[+0-9I]!,1,Set(CDR(hangupdirection)=A)
same => n,GoSub(CallLimit,s,1(${CALLERID(num)},${EXTEN}))
same => n,Dial(SIP/${ARG1}@${ARG2}:${ARG3},180,g)
same => n,Set(CDR(hangupdirection)=${IF($["${DIALSTATUS}"="ANSWER"]?B:SYSTEM)})
same => n,GotoIf($["${NoFailoverCause}"="${LISTFILTER(NoFailoverCause,",",${HANGUPCAUSE})}"]?:h-${HANGUPCAUSE},1)
same => n,Return()

[DialPSTN](HangupCause)
; If you had an external trunk, you would dial it here.
exten => _[+0-9a-zA-Z]!,1,Set(B-Number=${EXTEN})
same => n,Set(CDR(hangupdirection)=A)
same => n,GoSub(CallLimit,s,1(${CALLERID(num)},${B-number}))
same => n,Dial(SIP/${B-Number}@${GW1},180,g) 
same => n,Set(CDR(hangupdirection)=${IF($["${DIALSTATUS}"="ANSWER"]?B:SYSTEM)})
same => n,GotoIf($["${NoFailoverCause}"="${LISTFILTER(NoFailoverCause,",",${HANGUPCAUSE})}"]?:h-${HANGUPCAUSE},1)
same => n,Dial(SIP/${B-Number}@${GW2},180,g)
same => n,Set(CDR(hangupdirection)=${IF($["${DIALSTATUS}"="ANSWER"]?B:SYSTEM)})
same => n,Goto(h-${HANGUPCAUSE},1)

[CallLimit](HangupCause)
exten => s,1,GotoIf($["${B-IMSI}"=""]?A-IMSI)			; B is not from openBTS no need to count
same => n,Set(GROUP(B)=${B-IMSI})				;count the B IMSI
same => n,ExecIf($[${GROUP_COUNT(${B-IMSI})}>1]?Busy())		;busy if we try to make more that 1 call

same => n(A-IMSI),ExecIf($["${A-IMSI}"=""]?Return())			; A is not from openBTS no need to count
same => n,Set(GROUP(A)=${A-IMSI})				;count the caller
same => n,ExecIf($[${GROUP_COUNT(${A-IMSI})}>1]?Busy())		;busy if we try to receive more that 1 call
same => n,Return()

[phones](HangupCause)
; This is the context for handsets provisioned through the realtime database.
exten => _X!,1,Set(B-Number=${EXTEN})
same => n,Set(A-IMSI=${IF(${EXISTS(${SIP_HEADER(P-IMSI)})}?${SIP_HEADER(P-IMSI)}:${CALLERID(name)})})
same => n,Set(A-Name=${CALLERID(name)})
same => n,Set(A-Number=${ODBC_SQL(select callerid from sip_buddies where username=\"${A-IMSI}\")})
same => n,ExecIf(${ISNULL(${A-Number})}?Set(A-Number=${CALLERID(num)}):Set(CALLERID(num)=${A-Number}))
same => n,GotoIf(${VALID_EXTEN(emergency,${B-Number},1)}?emergency,${B-Number},1)
same => n,GotoIf(${VALID_EXTEN(default,${B-Number},1)}?default,${B-Number},1)
same => n,Set(B-IMSI=${ODBC_SQL(select dial from dialdata_table where exten=\"${B-Number}\")})
same => n,GotoIf($["${B-IMSI}"=""]?DialPSTN,${B-Number},1)		; this is not known number, send call to PSTN
same => n,Set(B-IPAddr=${ODBC_SQL(select ipaddr from sip_buddies where username=\"${B-IMSI}\")})
same => n,ExecIf($["${B-IPAddr}"=""]?Set(B-IPAddr="127.0.0.1"))	; Port was not set, so set to default. Gets around bug in subscriberRegistry
same => n,Set(B-Port=${ODBC_SQL(select port from sip_buddies where username=\"${B-IMSI}\")})
same => n,ExecIf($["${B-Port}"=""]?Set(B-Port=5062))			; Port was not set, so set to default. Gets around bug in subscriberRegistry
same => n,GoSub(DialGSM,${B-Number},1(${B-IMSI},${B-IPAddr},${B-Port}))
same => n,Goto(h-${HANGUPCAUSE},1)

[sip-local]
; This context is the union of all of the in-network contexts.
include => default
include => phones

[from-pstn](HangupCause)
exten => _X!,1,Set(B-Number=${EXTEN})
same => n,Set(B-IMSI=${ODBC_SQL(select dial from dialdata_table where exten=\"${B-Number}\")})
same => n,Set(B-IPAddr=${ODBC_SQL(select ipaddr from sip_buddies where username=\"${B-IMSI}\")})
same => n,ExecIf($["${B-IPAddr}"=""]?Set(B-IPAddr="127.0.0.1"))	; Port was not set, so set to default. Gets around bug in subscriberRegistry
same => n,Set(B-Port=${ODBC_SQL(select port from sip_buddies where username=\"${B-IMSI}\")})
same => n,ExecIf($["${B-Port}"=""]?Set(B-Port=5062))			; Port was not set, so set to default. Gets around bug in subscriberRegistry
same => n,GoSub(DialGSM,${B-Number},1(${B-IMSI},${B-IPAddr},${B-Port}))
same => n,Progress()
same => n,Playback(AllCircuitsBusy,noanswer)				;all other error codes
same => n,Congestion(5)

[emergency](HangupCause)
exten => _911!,1,NoOP(emergency)
exten => _112!,1,NoOP(emergency)
exten => _999!,1,NoOP(emergency)
exten => _[sS][oO][sS],1,NoOP(emergency)

#include extensions-custom.conf	;this file contain all the customer specifik changes
